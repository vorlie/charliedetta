<astro>
    <div class="main">
        <div class="title">
            <p id="ep-title">Odcinek 1 | Myślę o innych</p>
        </div>
        <div id="videoContainer">
            <iframe id="videoPlayer" src="" allowfullscreen allow="cross-origin"></iframe>
        </div>
        <div class="list">
            <button class="episode-button" value="1kSsdes70-1azrUZDK2W2TZEn3uiY0P7K" data-episode="Odcinek 1 | Myślę o innych">1</button>
            <button class="episode-button" value="1cjJ7XcFP-syeUFXFfp4K8McQ8KHPKcQf" data-episode="Odcinek 2 | Melodia rozpaczy">2</button>
            <button class="episode-button" value="1qYMMY2GlAovwUlJQaoBtZh8iyeSQQlG-" data-episode="Odcinek 3 | Miłość i ogień">3</button>
            <button class="episode-button" value="1QD_7DOT43srEe0YHxRPYEi7kQn-SyyX8" data-episode="Odcinek 4 | Chwila szczerości">4</button>
            <button class="episode-button" value="1CpV8olhqMsn1BTpRvAlRHGa13NDOIF0U" data-episode="Odcinek 5 | Zasłyszany dźwięk">5</button>
            <button class="episode-button" value="1ZY1y4uMW_7RPp5W5ned6c0Tx7q0pTHYm" data-episode="Odcinek 6 | Szczęście, którego nie widać">6</button>
            <button class="episode-button" value="1f7bi3yXVKcB_DgjMPpTQECKS6PWG041a" data-episode="Odcinek 7 | Koniec ucieczki">7</button>
            <button class="episode-button" value="1__e8D1jDlF2pBzekvOz3NF-OGG8CRHLF" data-episode="Odcinek 8 | Spotkanie">8</button>
            <button class="episode-button" value="1fFYVM9MXcnBbx9ysG-J8lfYFFKC-5028" data-episode="Odcinek 9 | Świat, który przeminął">9</button>
            <button class="episode-button" value="1ug4UwbTujzZy9hp-0XZIaWEbZR7Ax5Pf" data-episode="Odcinek 10 | Kradzież">10</button>
            <button class="episode-button" value="1pt3UbozeXyD1_cx96MrW3_qloX3m3hvC" data-episode="Odcinek 11 | Charlotte">11</button>
            <button class="episode-button" value="1-wJSGXVujaTQoH12kUkQ69Y4GrpzGybc" data-episode="Odcinek 12 | Obietnica">12</button>
            <button class="episode-button" value="1IQwZTfoY7X9VNnidO4tUEvUXpuIbcfTf" data-episode="Odcinek 13 | Nagrania przyszłości.">13</button>
        </div>
    </div>
</astro>    
<style>
    #ep-title{
        margin: 3px;
        font-size: 20px;
        font-weight: 600;
    }
    .main{
        max-width: 1200px;
        margin: auto;
        text-align: center;
    }
    .episode-button{
        margin-top: 5px;
        font-size: 15px;
        width: 50px;
        height: 50px;
    }
    .episode-button{
        display: inline-block;
        padding: 15px 15px;
        border: 2px solid var(--color-1);
        background-color: var(--color-main-background);
        -webkit-backdrop-filter: blur(40px);
        backdrop-filter: blur(5px);
        color: var(--color-text);
        border-radius: 16px;
        transition: 0.2s ease-in-out;
    }
    .episode-button:hover {
        border: 2px solid var(--border-color);
        background: var(--color-2);
        color: var(--color-text);
        cursor: pointer;
    }
    .selected {
        border: 2px solid var(--color-text-secondary);
        background-color: var(--color-main-background);
        color: var(--color-text);
    }
    #videoPlayer{
        border: transparent;
    }
    #videoContainer {
        position: relative;
        overflow: hidden;
        width: 100%;
        padding-top: 56.25%; /* 16:9 Aspect Ratio (divide 9 by 16 = 0.5625) */
        display: flex;
        align-items: center;
        border: 2px solid var(--color-1);
        border-radius: 16px;
    }

    /* Then style the iframe to fit in the container div with full height and width */
    #videoPlayer{
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        width: 100%;
        height: 100%;
    }

</style>
<script>
const episodeButtons = document.querySelectorAll(".episode-button") as NodeListOf<HTMLButtonElement>;
const videoPlayer = document.getElementById("videoPlayer") as HTMLIFrameElement;

const defaultEpisodeId = "1kSsdes70-1azrUZDK2W2TZEn3uiY0P7K"; // Replace with the ID of the default episode

// Function to set the video URL and update the selected button
const setVideoUrl = (videoId: string) => {
  const videoUrl = `https://drive.google.com/file/d/${videoId}/preview`;
  videoPlayer.src = videoUrl;

  // Remove the 'selected' class from all buttons
  episodeButtons.forEach((btn) => {
    btn.classList.remove("selected");
  });

  // Add the 'selected' class to the button with the corresponding videoId
  const selectedButton = document.querySelector(`button[value="${videoId}"]`);
  if (selectedButton) {
    selectedButton.classList.add("selected");
  }
};

// Set the default episode on page load
setVideoUrl(defaultEpisodeId);

// Add click event listeners to the buttons
episodeButtons.forEach((button) => {
  const videoId = button.value;

  button.addEventListener("click", () => {
    setVideoUrl(videoId);
  });
});

episodeButtons.forEach((button) => {
  button.addEventListener("click", () => {
    const episodeTitle = button.dataset.episode ?? "";
    const epTitleElement = document.getElementById("ep-title");
    if (epTitleElement) {
      epTitleElement.textContent = episodeTitle;
    }
  });
});
</script>